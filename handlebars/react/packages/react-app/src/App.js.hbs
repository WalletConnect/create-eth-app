import React, { useState } from "react";
import { Contract } from "@ethersproject/contracts";
import { getDefaultProvider } from "@ethersproject/providers";
import { useQuery } from "@apollo/react-hooks";

import { Body, Button, Header, Image, Link } from "./components";
import logo from "./ethereumLogo.png";
import useWeb3Modal from "./hooks/useWeb3Modal";

{{#each imports}}
{{{ this }}}
{{/each}}

async function readOnChainData() {
  {{#each readOnChainData}}
  {{{ this }}}
  {{/each}}
}

function WalletButton({ provider, loadWeb3Modal, logoutOfWeb3Modal }) {
  return (
    <Button
      onClick={() => {
        if (!provider) {
          loadWeb3Modal();
        } else {
          logoutOfWeb3Modal();
        }
      }}
    >
      {!provider ? "Connect Wallet" : "Disconnect Wallet"}
    </Button>
  );
}

function UserInfo({provider}){
  const [account, setAccount] = useState(false);
  const [name, setName] = useState(false);
  React.useEffect(() => {
    async function fetchAccount() {
      try{
        const a = (await provider.listAccounts())[0]
        setAccount(a)
        const n = await provider.lookupAddress(a);
        setName(n)
      }catch(e){
        console.log(e)
      }
    }
    if(provider) fetchAccount();
  }, [provider]);

  if(account){
    return(`Connected as ${name || account.slice(0,5) + '...'}`);
  }else{
    return('')
  }
}

function App() {
  const { loading, error, data } = useQuery({{ graphqlQueryName }});
  const [provider, loadWeb3Modal, logoutOfWeb3Modal] = useWeb3Modal();

  React.useEffect(() => {
    {{#each hooks.readData }}
    {{{ this }}}
    {{/each}}
  }, [loading, error, data]);

  return (
    <div>
      <Header>
        <UserInfo provider={provider} />
        <WalletButton provider={provider} loadWeb3Modal={loadWeb3Modal} logoutOfWeb3Modal={logoutOfWeb3Modal} />
      </Header>
      <Body>
        <Image src={logo} alt="react-logo" />
        <p>
          Edit <code>packages/react-app/src/App.js</code> and save to reload.
        </p>
        {/* Remove the "hidden" prop and open the JavaScript console in the browser to see what this function does */}
        <Button hidden onClick={() => readOnChainData()}>
          {{ callToAction }}
        </Button>
        <Link href="https://ethereum.org/developers/#getting-started" style={{{{raw-helper}}}}{{ marginTop: "8px" }}{{{{/raw-helper}}}}>
          Learn Ethereum
        </Link>
        <Link href="https://reactjs.org">Learn React</Link>
        <Link href="{{ learnUrl }}">Learn {{ whatToLearn }}</Link>
      </Body>
    </div>
  );
}

export default App;
